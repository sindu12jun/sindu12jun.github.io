{"version":3,"sources":["utils/index.ts","utils/http.ts","utils/use-async.ts","components/profiler.tsx","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx","auth-provider.ts","components/lib.tsx","context/auth-context.tsx"],"names":["cleanObject","object","result","Object","keys","forEach","key","value","undefined","isVoid","useMount","callback","useEffect","useDebounce","delay","useState","debouncedValue","setDebouncedValue","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","window","location","href","origin","subset","obj","filteredEntries","entries","filter","includes","fromEntries","useMountedRef","mountedRef","apiUrl","process","http","endpoint","a","data","token","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","reload","Promise","reject","message","json","ok","useHttp","user","useAuth","useCallback","defaultInitialState","stat","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","useReducer","state","action","safeDispatch","dispatch","useSafeDispatch","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","queue","setInterval","length","queueToSend","console","log","Profiler","metadata","phases","props","onRender","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","push","ErrorBoundary","this","fallbackRender","children","React","Component","AuthenticatedApp","lazy","UnauthenticatedApp","App","className","FullPageErrorFallback","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","loadServer","ReactDOM","render","StrictMode","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","login","register","logout","removeItem","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","Text","type","ButtonNoPadding","Button","ScreenContainer","bootstrapUser","AuthContext","createContext","displayName","AuthProvider","setUser","useQueryClient","Provider","form","clear","context","useContext"],"mappings":"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","file":"static/js/main.2e50ad52.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === \"\";\n\n// let a: object\n// a = {name: 'jack'}\n// a = () => {\n// }\n// a = new RegExp('')\n//\n// let b: { [key: string]: unknown }\n// b = {name: 'Jack'}\n// b = () => {}\n// 在一个函数里，改变传入的对象本身是不好的\nexport const cleanObject = (object?: { [key: string]: unknown }) => {\n  // Object.assign({}, object)\n  if (!object) {\n    return {};\n  }\n  const result = { ...object };\n  Object.keys(result).forEach((key) => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\n// const debounce = (func, delay) => {\n//   let timeout;\n//   return (...param) => {\n//     if (timeout) {\n//       clearTimeout(timeout);\n//     }\n//     timeout = setTimeout(function() {\n//       func(...param);\n//     }, delay);\n//   }\n// }\n// const log = debounce(() => console.log('call'), 5000)\n// log()\n// log()\n// log()\n//   ...5s\n// 执行！\n\n// debounce 原理讲解：\n// 0s ---------> 1s ---------> 2s --------> ...\n//     一定要理解：这三个函数都是同步操作，所以它们都是在 0~1s 这个时间段内瞬间完成的；\n//     log()#1 // timeout#1\n//     log()#2 // 发现 timeout#1！取消之，然后设置timeout#2\n//     log()#3 // 发现 timeout#2! 取消之，然后设置timeout#3\n//             // 所以，log()#3 结束后，就只剩timeout#3在独自等待了\n\n// 后面用泛型来规范类型\nexport const useDebounce = <V>(value: V, delay?: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    // 每次在value变化以后，设置一个定时器\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n    // 每次在上一个useEffect处理完以后再运行\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n  };\n};\n\nexport const useDocumentTitle = (title: string, keepOnUnmount = true) => {\n  const oldTitle = useRef(document.title).current;\n  // 页面加载时: 旧title\n  // 加载后：新title\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        // 如果不指定依赖，读到的就是旧title\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 传入一个对象，和键集合，返回对应的对象中的键值对\n * @param obj\n * @param keys\n */\nexport const subset = <\n  O extends { [key in string]: unknown },\n  K extends keyof O\n>(\n  obj: O,\n  keys: K[]\n) => {\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\n    keys.includes(key as K)\n  );\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\n};\n\n/**\n * 返回组件的挂载状态，如果还没挂载或者已经卸载，返回false；反之，返回true\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n\n  return mountedRef;\n};\n","import qs from \"qs\";\nimport * as auth from \"auth-provider\";\nimport { useAuth } from \"context/auth-context\";\nimport { useCallback } from \"react\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\n\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  // axios 和 fetch 的表现不一样，axios可以直接在返回状态不为2xx的时候抛出异常\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, config)\n    .then(async (response) => {\n      if (response.status === 401) {\n        await auth.logout();\n        window.location.reload();\n        return Promise.reject({ message: \"请重新登录\" });\n      }\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        return Promise.reject(data);\n      }\n    });\n};\n\n// JS 中的typeof，是在runtime时运行的\n// return typeof 1 === 'number'\n\n// TS 中的typeof，是在静态环境运行的\n// return (...[endpoint, config]: Parameters<typeof http>) =>\nexport const useHttp = () => {\n  const { user } = useAuth();\n  // utility type 的用法：用泛型给它传入一个其他类型，然后utility type对这个类型进行某种操作\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token]\n  );\n};\n\n// 类型别名、Utility Type 讲解\n// 联合类型\nlet myFavoriteNumber: string | number;\nmyFavoriteNumber = \"seven\";\nmyFavoriteNumber = 7;\n// TS2322: Type '{}' is not assignable to type 'string | number'.\n// myFavoriteNumber = {}\nlet jackFavoriteNumber: string | number;\n\n// 类型别名在很多情况下可以和interface互换\n// interface Person {\n//   name: string\n// }\n// type Person = { name: string }\n// const xiaoMing: Person = {name: 'xiaoming'}\n\n// 类型别名, interface 在这种情况下没法替代type\ntype FavoriteNumber = string | number;\nlet roseFavoriteNumber: FavoriteNumber = \"6\";\n\n// interface 也没法实现Utility type\ntype Person = {\n  name: string;\n  age: number;\n};\nconst xiaoMing: Partial<Person> = {};\nconst shenMiRen: Omit<Person, \"name\" | \"age\"> = {};\ntype PersonKeys = keyof Person;\ntype PersonOnlyName = Pick<Person, \"name\" | \"age\">;\ntype Age = Exclude<PersonKeys, \"name\">;\n\n// Partial 的实现\ntype Partial<T> = {\n  [P in keyof T]?: T[P];\n};\n","import { useCallback, useReducer, useState } from \"react\";\nimport { useMountedRef } from \"utils/index\";\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\nconst defaultInitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [dispatch, mountedRef]\n  );\n};\n\nexport const useAsync = <D>(\n  initialState?: State<D>,\n  initialConfig?: typeof defaultConfig\n) => {\n  const config = { ...defaultConfig, ...initialConfig };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initialState,\n    }\n  );\n  const safeDispatch = useSafeDispatch(dispatch);\n  // useState直接传入函数的含义是：惰性初始化；所以，要用useState保存函数，不能直接传入函数\n  // https://codesandbox.io/s/blissful-water-230u4?file=/src/App.js\n  const [retry, setRetry] = useState(() => () => {});\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        error,\n        stat: \"error\",\n        data: null,\n      }),\n    [safeDispatch]\n  );\n\n  // run 用来触发异步请求\n  const run = useCallback(\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n      if (!promise || !promise.then) {\n        throw new Error(\"请传入 Promise 类型数据\");\n      }\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig?.retry(), runConfig);\n        }\n      });\n      safeDispatch({ stat: \"loading\" });\n      return promise\n        .then((data) => {\n          setData(data);\n          return data;\n        })\n        .catch((error) => {\n          // catch会消化异常，如果不主动抛出，外面是接收不到异常的\n          setError(error);\n          if (config.throwOnError) return Promise.reject(error);\n          return error;\n        });\n    },\n    [config.throwOnError, setData, setError, safeDispatch]\n  );\n\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    setData,\n    setError,\n    // retry 被调用时重新跑一遍run，让state刷新一遍\n    retry,\n    ...state,\n  };\n};\n","import React, { ProfilerOnRenderCallback, ProfilerProps } from \"react\";\n\ntype Props = { metadata?: any; phases?: (\"mount\" | \"update\")[] } & Omit<\n  ProfilerProps,\n  \"onRender\"\n>;\n\nlet queue: unknown[] = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) {\n    return;\n  }\n  const queueToSend = [...queue];\n  queue = [];\n  console.log(queueToSend);\n};\n\nsetInterval(sendProfileQueue, 5000);\n\nexport const Profiler = ({ metadata, phases, ...props }: Props) => {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n        metadata,\n      });\n    }\n  };\n\n  return <React.Profiler onRender={reportProfile} {...props} />;\n};\n","import React from \"react\";\n\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\n\n// https://github.com/bvaughn/react-error-boundary\nexport class ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\n  { error: Error | null }\n> {\n  state = { error: null };\n\n  // 当子组件抛出异常，这里会接收到并且调用\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n    if (error) {\n      return fallbackRender({ error });\n    }\n    return children;\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { useAuth } from \"context/auth-context\";\nimport { ErrorBoundary } from \"components/error-boundary\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\n\nconst AuthenticatedApp = React.lazy(() => import(\"authenticated-app\"));\nconst UnauthenticatedApp = React.lazy(() => import(\"unauthenticated-app\"));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { AuthProvider } from \"context/auth-context\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <AuthProvider>{children}</AuthProvider>\n      </Router>\n    </QueryClientProvider>\n  );\n};\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DevTools, loadServer } from \"jira-dev-tool\";\n// 务必在jira-dev-tool后面引入\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"context\";\nimport { Profiler } from \"components/profiler\";\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <Profiler id={\"Root App\"} phases={[\"mount\"]}>\n        <AppProviders>\n          <DevTools />\n          <App />\n        </AppProviders>\n      </Profiler>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// 在真实环境中，如果使用firebase这种第三方auth服务的话，本文件不需要开发者开发\n\nimport { User } from \"types/user\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { DevTools } from \"jira-dev-tool\";\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size={\"large\"} />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\n// 类型守卫\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { ReactNode } from \"react\";\nimport * as auth from \"auth-provider\";\nimport { http } from \"utils/http\";\nimport { useMount } from \"utils\";\nimport { useAsync } from \"utils/use-async\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\nimport { User } from \"types/user\";\nimport { useQueryClient } from \"react-query\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n\n  // point free\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(() => {\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  if (isError) {\n    return <FullPageErrorFallback error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n"],"sourceRoot":""}