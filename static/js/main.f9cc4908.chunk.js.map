{"version":3,"sources":["auth-provider.ts","utils/http.ts","utils/use-async.ts","utils/index.ts","components/lib.tsx","context/auth-context.tsx","components/error-boundary.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx"],"names":["apiUrl","process","localStorageKey","handleUserResponse","user","window","localStorage","setItem","token","logout","a","removeItem","http","endpoint","data","headers","customConfig","config","method","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","location","reload","Promise","reject","message","json","ok","defaultInitialState","stat","error","defaultConfig","throwOnError","useSafeDispatch","dispatch","mountedRef","useRef","useEffect","current","useMountedRef","useCallback","styled","div","props","between","undefined","marginBottom","gap","FullPage","FullPageLoading","size","FullPageErrorFallback","ErrorBox","value","Text","type","Button","bootstrapUser","getItem","AuthContext","React","createContext","displayName","AuthProvider","callback","children","initialState","initialConfig","useReducer","state","action","safeDispatch","useState","retry","setRetry","setData","setError","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","useAsync","setUser","queryClient","useQueryClient","Provider","login","form","register","clear","useAuth","context","useContext","ErrorBoundary","this","fallbackRender","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","QueryClient","QueryClientProvider","client","loadServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9cc4908.chunk.js","sourcesContent":["// 在真实环境中，如果使用firebase这种第三方auth服务的话，本文件不需要开发者开发\n\nimport { User } from \"types/user\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\nexport const handleUserResponse = ({ user }: { user: User }) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nexport const login = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const register = (data: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const logout = async () =>\n  window.localStorage.removeItem(localStorageKey);\n","import qs from \"qs\";\nimport * as auth from \"auth-provider\";\nimport { useAuth } from \"context/auth-context\";\nimport { useCallback } from \"react\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object;\n}\n\nexport const http = async (\n  endpoint: string,\n  { data, token, headers, ...customConfig }: Config = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    endpoint += `?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  // axios 和 fetch 的表现不一样，axios可以直接在返回状态不为2xx的时候抛出异常\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, config)\n    .then(async (response) => {\n      if (response.status === 401) {\n        await auth.logout();\n        window.location.reload();\n        return Promise.reject({ message: \"请重新登录\" });\n      }\n      const data = await response.json();\n      if (response.ok) {\n        return data;\n      } else {\n        return Promise.reject(data);\n      }\n    });\n};\n\n// JS 中的typeof，是在runtime时运行的\n// return typeof 1 === 'number'\n\n// TS 中的typeof，是在静态环境运行的\n// return (...[endpoint, config]: Parameters<typeof http>) =>\nexport const useHttp = () => {\n  const { user } = useAuth();\n  // utility type 的用法：用泛型给它传入一个其他类型，然后utility type对这个类型进行某种操作\n  return useCallback(\n    (...[endpoint, config]: Parameters<typeof http>) =>\n      http(endpoint, { ...config, token: user?.token }),\n    [user?.token]\n  );\n};\n\n// 类型别名、Utility Type 讲解\n// 联合类型\nlet myFavoriteNumber: string | number;\nmyFavoriteNumber = \"seven\";\nmyFavoriteNumber = 7;\n// TS2322: Type '{}' is not assignable to type 'string | number'.\n// myFavoriteNumber = {}\nlet jackFavoriteNumber: string | number;\n\n// 类型别名在很多情况下可以和interface互换\n// interface Person {\n//   name: string\n// }\n// type Person = { name: string }\n// const xiaoMing: Person = {name: 'xiaoming'}\n\n// 类型别名, interface 在这种情况下没法替代type\ntype FavoriteNumber = string | number;\nlet roseFavoriteNumber: FavoriteNumber = \"6\";\n\n// interface 也没法实现Utility type\ntype Person = {\n  name: string;\n  age: number;\n};\nconst xiaoMing: Partial<Person> = {};\nconst shenMiRen: Omit<Person, \"name\" | \"age\"> = {};\ntype PersonKeys = keyof Person;\ntype PersonOnlyName = Pick<Person, \"name\" | \"age\">;\ntype Age = Exclude<PersonKeys, \"name\">;\n\n// Partial 的实现\ntype Partial<T> = {\n  [P in keyof T]?: T[P];\n};\n","import { useCallback, useReducer, useState } from \"react\";\nimport { useMountedRef } from \"utils/index\";\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\nconst defaultInitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const mountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0),\n    [dispatch, mountedRef]\n  );\n};\n\nexport const useAsync = <D>(\n  initialState?: State<D>,\n  initialConfig?: typeof defaultConfig\n) => {\n  const config = { ...defaultConfig, ...initialConfig };\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initialState,\n    }\n  );\n  const safeDispatch = useSafeDispatch(dispatch);\n  // useState直接传入函数的含义是：惰性初始化；所以，要用useState保存函数，不能直接传入函数\n  // https://codesandbox.io/s/blissful-water-230u4?file=/src/App.js\n  const [retry, setRetry] = useState(() => () => {});\n\n  const setData = useCallback(\n    (data: D) =>\n      safeDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      }),\n    [safeDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) =>\n      safeDispatch({\n        error,\n        stat: \"error\",\n        data: null,\n      }),\n    [safeDispatch]\n  );\n\n  // run 用来触发异步请求\n  const run = useCallback(\n    (promise: Promise<D>, runConfig?: { retry: () => Promise<D> }) => {\n      if (!promise || !promise.then) {\n        throw new Error(\"请传入 Promise 类型数据\");\n      }\n      setRetry(() => () => {\n        if (runConfig?.retry) {\n          run(runConfig?.retry(), runConfig);\n        }\n      });\n      safeDispatch({ stat: \"loading\" });\n      return promise\n        .then((data) => {\n          setData(data);\n          return data;\n        })\n        .catch((error) => {\n          // catch会消化异常，如果不主动抛出，外面是接收不到异常的\n          setError(error);\n          if (config.throwOnError) return Promise.reject(error);\n          return error;\n        });\n    },\n    [config.throwOnError, setData, setError, safeDispatch]\n  );\n\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    setData,\n    setError,\n    // retry 被调用时重新跑一遍run，让state刷新一遍\n    retry,\n    ...state,\n  };\n};\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === \"\";\n\n// let a: object\n// a = {name: 'jack'}\n// a = () => {\n// }\n// a = new RegExp('')\n//\n// let b: { [key: string]: unknown }\n// b = {name: 'Jack'}\n// b = () => {}\n// 在一个函数里，改变传入的对象本身是不好的\nexport const cleanObject = (object: { [key: string]: unknown }) => {\n  // Object.assign({}, object)\n  const result = { ...object };\n  Object.keys(result).forEach((key) => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\n// const debounce = (func, delay) => {\n//   let timeout;\n//   return (...param) => {\n//     if (timeout) {\n//       clearTimeout(timeout);\n//     }\n//     timeout = setTimeout(function() {\n//       func(...param);\n//     }, delay);\n//   }\n// }\n// const log = debounce(() => console.log('call'), 5000)\n// log()\n// log()\n// log()\n//   ...5s\n// 执行！\n\n// debounce 原理讲解：\n// 0s ---------> 1s ---------> 2s --------> ...\n//     一定要理解：这三个函数都是同步操作，所以它们都是在 0~1s 这个时间段内瞬间完成的；\n//     log()#1 // timeout#1\n//     log()#2 // 发现 timeout#1！取消之，然后设置timeout#2\n//     log()#3 // 发现 timeout#2! 取消之，然后设置timeout#3\n//             // 所以，log()#3 结束后，就只剩timeout#3在独自等待了\n\n// 后面用泛型来规范类型\nexport const useDebounce = <V>(value: V, delay?: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    // 每次在value变化以后，设置一个定时器\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n    // 每次在上一个useEffect处理完以后再运行\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n  };\n};\n\nexport const useDocumentTitle = (title: string, keepOnUnmount = true) => {\n  const oldTitle = useRef(document.title).current;\n  // 页面加载时: 旧title\n  // 加载后：新title\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        // 如果不指定依赖，读到的就是旧title\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * 传入一个对象，和键集合，返回对应的对象中的键值对\n * @param obj\n * @param keys\n */\nexport const subset = <\n  O extends { [key in string]: unknown },\n  K extends keyof O\n>(\n  obj: O,\n  keys: K[]\n) => {\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\n    keys.includes(key as K)\n  );\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\n};\n\n/**\n * 返回组件的挂载状态，如果还没挂载或者已经卸载，返回false；反之，返回true\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n\n  return mountedRef;\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Button, Spin, Typography } from \"antd\";\nimport { DevTools } from \"jira-dev-tool\";\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size={\"large\"} />\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <ErrorBox error={error} />\n  </FullPage>\n);\n\n// 类型守卫\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n","import React, { ReactNode } from \"react\";\nimport * as auth from \"auth-provider\";\nimport { http } from \"utils/http\";\nimport { useMount } from \"utils\";\nimport { useAsync } from \"utils/use-async\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\nimport { User } from \"types/user\";\nimport { useQueryClient } from \"react-query\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n\n  // point free\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(() => {\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  if (isError) {\n    return <FullPageErrorFallback error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","import React from \"react\";\n\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\n\n// https://github.com/bvaughn/react-error-boundary\nexport class ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallbackRender: FallbackRender }>,\n  { error: Error | null }\n> {\n  state = { error: null };\n\n  // 当子组件抛出异常，这里会接收到并且调用\n  static getDerivedStateFromError(error: Error) {\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n    if (error) {\n      return fallbackRender({ error });\n    }\n    return children;\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { useAuth } from \"context/auth-context\";\nimport { AuthenticatedApp } from \"authenticated-app\";\nimport { UnauthenticatedApp } from \"unauthenticated-app\";\nimport { ErrorBoundary } from \"components/error-boundary\";\nimport { FullPageErrorFallback } from \"components/lib\";\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React, { ReactNode } from \"react\";\nimport { AuthProvider } from \"context/auth-context\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  const queryClient = new QueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { DevTools, loadServer } from \"jira-dev-tool\";\n// 务必在jira-dev-tool后面引入\nimport \"antd/dist/antd.less\";\nimport { AppProviders } from \"context\";\n\nloadServer(() =>\n  ReactDOM.render(\n    <React.StrictMode>\n      <AppProviders>\n        <DevTools />\n        <App />\n      </AppProviders>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}